image: pawankmr301/alpine-eia:latest

variables:
  AUTO_DEVOPS_DOMAIN: ip-192-168-223-224.us-west-2.compute.internal

stages:
    - build_artifact
    - build_docker_image
    - deploy_uat
    - deploy_prod
    
.build-artifact:
  stage: build_artifact
  image: pawankmr301/alpine-eia:latest
  services:
  - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  script:
    - setup_docker
    - build
  only:
    - branches

.build-docker-image:
  stage: build_docker_image
  image: docker:stable

  services:
    - docker:dind
  
  variables:
    CI_PROJECT_PATH: pawankmr301/spring-eureka
    CONTAINER_IMAGE: hub.docker.com/$CI_PROJECT_PATH
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2

  before_script:
    - echo "useme123" | docker login --username pawankmr301 --password-stdin

  script:
    - docker pull $CONTAINER_IMAGE:latest || true
    - docker build --cache-from $CONTAINER_IMAGE:latest --tag $CI_PROJECT_PATH:latest .
    - docker push $CI_PROJECT_PATH:latest

deploy-uat:
  stage: deploy_uat
  image: pawankmr301/alpine-eia:latest
  script:
    - ensure_namespace
    - install_tiller

.auto_devops: &auto_devops |
  # Auto DevOps variables and functions
  [[ "$TRACE" ]] && set -x

  export CI_APPLICATION_REPOSITORY=$CI_REGISTRY_IMAGE/auto-deploy-app
  export CI_APPLICATION_TAG=$CI_COMMIT_SHA
  export CI_CONTAINER_NAME=ci_job_build_${CI_JOB_ID}
  export KUBE_NAMESPACE=default
  export TILLER_NAMESPACE=$KUBE_NAMESPACE

  function build () {
      mvn package
      curl  -u admin:admin123  --upload-file target/spring-eureka-server-0.0.1-SNAPSHOT.jar http://34.231.201.41:8081/repository/testrepo/
  }

  function install_tiller() {
      set -x
      echo "Checking Tiller..."
      if kubectl get serviceaccount --kubeconfig=.kube/config
      then
          echo "Tiller is already installed"
          wget http://34.231.201.41:8081/repository/testrepo/rbac-config.yaml
          kubectl apply -f rbac-config.yaml --kubeconfig=.kube/config
          helm init --service-account tiller --kubeconfig=.kube/config
      else
          wget -c  http://34.231.201.41:8081/repository/testrepo/config -O .kube/config 
          kubectl create serviceaccount tiller --namespace "$TILLER_NAMESPACE"  --kubeconfig=.kube/config
          wget http://34.231.201.41:8081/repository/testrepo/rbac-config.yaml
          kubectl apply -f rbac-config.yaml --kubeconfig=.kube/config
          helm init --service-account tiller --kubeconfig=.kube/config
      fi
  }

  function ensure_namespace() {
      mkdir .kube
      wget -c  http://34.231.201.41:8081/repository/testrepo/config -O .kube/config
      kubectl describe namespace "$KUBE_NAMESPACE" --kubeconfig=.kube/config || kubectl create namespace "$KUBE_NAMESPACE" --kubeconfig=.kube/config
  }

  function setup_docker() {
      if ! docker info &>/dev/null
      then
        if [ -z "$DOCKER_HOST" -a "$KUBERNETES_PORT" ]
        then
          export DOCKER_HOST='tcp://localhost:2375'
        fi
      fi
  }

before_script:
- *auto_devops